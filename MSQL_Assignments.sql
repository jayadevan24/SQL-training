SELECT name  FROM master.sys.databases ORDER BY name;
CREATE DATABASE hospital_db;
USE  hospital_db;

BACKUP DATABASE hospital_db TO DISK = 'C:\SQL QUery1\ASSIGNMENTS\hospital.db.bak';

CREATE DATABASE hospital_db1;

USE hospital_db1;
DROP DATABASE hospital_db;

RESTORE DATABASE hospital_db FROM DISK = 'C:\SQL QUery1\ASSIGNMENTS\hospital.db.bak';


--ASSIGNMENT 1 HOSPITAL TABLES
USE hospital_db

CREATE TABLE patient (record_no INT PRIMARY KEY, name VARCHAR(50),PHONE_NUMBER INT,gender char,age smallint);

alter table  patient add Location varchar(50);

INSERT INTO patient (record_no,name,PHONE_NUMBER,gender,age,Location) VALUES (2231,'AAAA',99887766,'F',34,'USA'),
                                                                             (6654,'BBBB',33224455,'M',76,'INDIA'), 
																			 (7721,'CCCC',6655112,'F',39,'SRILANKA'),
																			 (7787,'DDDD',66555874,'M',53,'AFRICA');

UPDATE patient SET name='EEEE' WHERE name='DDDD';

SELECT * FROM patient;

TRUNCATE TABLE patient;

SELECT * FROM patient;

DROP TABLE patient;

--ASSIGNMENT 2 EMPLOYEE

use employee_db;

create table employees (EMPLOYEEID INT PRIMARY KEY IDENTITY (1,1), FIRSTNAME VARCHAR(50),LASTNAME VARCHAR(50),DOB DATE, POSITION VARCHAR(100),SALARY DECIMAL(10,2));

INSERT INTO employees (FIRSTNAME,LASTNAME,DOB,POSITION,SALARY) VALUES ('john','doe','1980-01-05','manager',75000.00),
                                                                       ('jane','smith','1985-03-22','developer',60000.00),
																	   ('micheal','brown','1990-07-03','designer',55000.00);

select * from employees;

UPDATE employees SET SALARY=65000.00 WHERE EMPLOYEEID=2;
select * from employees;

DELETE FROM employees WHERE EMPLOYEEID=3;
select * from employees;

SELECT * FROM employees WHERE SALARY>60000.00;

--ASSIGNMENT 3 AGGREGATE FUNCTIONS

CREATE TABLE CUSTOMERS (CUSTOMER_ID INT PRIMARY KEY,CUST_NAME VARCHAR(50),CITY VARCHAR(50),GRADE INT,SALESAMOUNT INT);

INSERT INTO CUSTOMERS VALUES (3002,'ANNA ANTHONY','NEW YORK',100,5001),
                              (3007,'SAMANTHA CARL','NEW YORK',200,4001),
							  (3005,'JACOB JAMES','CALIFORNIA',200,2002),
							  (3008,'SOPHIE GREEN','LONDON',300,6002),
							  (3004,'JOE WILLIAM','PARIS',300,9000);	
							  
SELECT * FROM CUSTOMERS;

SELECT COUNT(CUSTOMER_ID) AS 'NUMBER OF CUSTOMERS' FROM CUSTOMERS;

SELECT CUST_NAME AS 'HIGHEST GRADED CUTOMERS' FROM CUSTOMERS WHERE GRADE=(SELECT MAX(GRADE) FROM CUSTOMERS);

SELECT CUST_NAME AS 'LOWEST GRADED CUTOMERS' FROM CUSTOMERS WHERE GRADE=(SELECT MIN(GRADE) FROM CUSTOMERS);

SELECT AVG(SALESAMOUNT) FROM CUSTOMERS;

SELECT SUM(SALESAMOUNT) FROM CUSTOMERS;


--ASSIGNMENT 4

use employee_db;

CREATE TABLE SALES (
ORDERID INT PRIMARY KEY IDENTITY(1,1),
ORDDATE DATE NOT NULL DEFAULT GETDATE(),
ORDPRICE INT ,
ORDQTY int  NOT NULL DEFAULT(1),
CUSTNAME VARCHAR(30) NOT NULL
);

SELECT * FROM SALES;

INSERT INTO SALES VALUES 
('2020/11/22',150,2,'JOHN'),
('2020/07/10',180,2,'TOM'),
('2020/06/13',400,5,'JERRY'),
('2020/06/15',320,2,'JOHN'),
('2020/11/22',800,4,'BOND'),
('2020/09/02',730,4,'CHAPLIN'),
('2020/10/03',1000,2,'MICKEY');

--1)COUNT  ORDERS MADE BY JOHN
SELECT SUM(ORDQTY) AS 'NUMBER OF ORDERS'FROM SALES WHERE CUSTNAME='JOHN';

--2)NUMBER OF UNIQUE CUSTOMERS
SELECT COUNT(DISTINCT(CUSTNAME)) AS 'TOTAL UNIQUE CUSTOMER' FROM SALES ;

--3)TOTAL NUMBER OF ITEMS ORDERED BY ALL
SELECT SUM(ORDQTY) AS 'TOTAL NO OF ITEMS ORDERED' FROM SALES;

--4)AVG NUMBER OF ITEMS PER ORDER
SELECT ((avg(ORDQTY)) AS 'AVG NO OF ITEMS PER ORDER'FROM SALES;

--5)AVG ORDER QTY WITH ORDER PROCE>300
SELECT AVG(ORDQTY) AS 'AVG ORDER PROCE >300' FROM SALES WHERE ORDPRICE>300;

--6)MIN PRICE PAID FOR ANY NUMBER OF ORDERS
SELECT MIN(ORDPRICE) AS 'MIN PRICE PAID' FROM SALES;

--7)ALL CUSTOMERS WHOSE NAME ENDS WITH N
SELECT CUSTNAME AS 'NAMES THAT ENDS WITH N' FROM SALES WHERE CUSTNAME LIKE '%N';

--8)ALL UNIQUE CUSTOMERS NAMES FROM TABLE
SELECT DISTINCT(CUSTNAME) AS 'CUSTOMERS NAMES' FROM SALES;

--9)TOTAL AMOUNT SPEND BY EACH CUSTOMER
SELECT CUSTNAME,SUM(ORDPRICE) AS 'TOTAL SPENT' FROM SALES GROUP BY CUSTNAME;

--10)UNIQUE CUSTOMERS WHO SPENT MORE THAN 700
SELECT CUSTNAME FROM SALES  WHERE ORDPRICE>700 GROUP BY CUSTNAME;

--11)CUSTOMERS THAT HAVE ORDERED MORE THAN 3 TIMES
SELECT CUSTNAME FROM SALES GROUP BY CUSTNAME HAVING SUM(ORDQTY)>3 ;

--12)ALL WHO SPENT MORE THAN 600
SELECT CUSTNAME,ORDPRICE FROM SALES WHERE ORDPRICE>600 GROUP BY CUSTNAME,ORDPRICE;

--13)LIST ORDERS IN ASCENDING ORDER OF PRICE
SELECT * FROM SALES  ORDER BY ORDPRICE;

--14)LIST ORDERS IN DESCENDING ORDER OF PRICE
SELECT * FROM SALES  ORDER BY ORDPRICE DESC;

